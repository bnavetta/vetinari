import java.time.Year

buildscript {
	repositories {
		jcenter()
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:latest.release'
		classpath 'com.netflix.nebula:nebula-plugin-plugin:latest.release'
		classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:latest.release' // For snapshots
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:latest.release' // For releases
		classpath 'com.github.townsfolk:gradle-release:latest.release'
		classpath 'com.github.jengelman.gradle.plugins:shadow:latest.release'
	}
}

allprojects {
	apply plugin: 'eclipse'
	apply plugin: 'idea'
}

subprojects {
	apply plugin: 'nebula-project'
	apply plugin: 'license'
	apply plugin: 'groovy'

	apply plugin: 'checkstyle'
	checkstyle {
		configFile = rootProject.file('config/checkstyle.xml')
		ignoreFailures = true // Doesn't support Java 8 yet
	}

	contacts {
		'ben.navetta@gmail.com' {
			moniker 'Ben Navetta'
			github 'roguePanda'
		}
	}

	license {
		header rootProject.file('config/HEADER')
		ext.year = Year.now().value
		skipExistingHeaders true
	}

	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

// Apply after the groovy plugin
apply from: 'gradle/dependencies.gradle'

// Apply after nebula-project
apply from: 'gradle/publishing.gradle'
apply from: 'gradle/release.gradle'

apply from: 'gradle/sonar.gradle'

task wrapper(type: Wrapper) {
	gradleVersion = '2.0'
}
