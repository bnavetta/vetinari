import nl.javadude.gradle.plugins.license.License

import java.time.Year

buildscript {
	repositories {
		jcenter()
		mavenCentral()
		mavenLocal()
	}

	dependencies {
		classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:latest.release'
		classpath('com.netflix.nebula:nebula-plugin-plugin:latest.release') {
			exclude module: 'nebula-test'
		}
		classpath 'com.netflix.nebula:gradle-git-scm-plugin:latest.release'
		classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:latest.release' // For snapshots
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:latest.release' // For releases
		classpath 'com.github.townsfolk:gradle-release:latest.release'
		classpath 'com.github.jengelman.gradle.plugins:shadow:latest.release'
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:latest.release'
	}

	configurations {
		// gets pulled in somewhere, but its spock 0.7-groovy-1.8 dependency breaks everything
		classpath.exclude module: 'nebula-test'
	}
}

allprojects {
	apply plugin: 'eclipse'
	apply plugin: 'idea'

	apply plugin: 'com.github.kt3k.coveralls'
}

subprojects {
	apply plugin: 'nebula-project'
	apply plugin: 'license'
	apply plugin: 'jacoco'
	apply plugin: 'groovy'
	apply plugin: 'nebula-integtest'


	contacts {
		'ben.navetta@gmail.com' {
			moniker 'Ben Navetta'
			github 'roguePanda'
		}
	}

	license {
		header rootProject.file('config/HEADER')
		ext.year = Year.now().value
		skipExistingHeaders true

		mapping {
			txt = 'SCRIPT_STYLE'
		}
	}

	jacocoTestReport {
		reports {
			xml.enabled true
			csv.enabled false
			html.enabled true
		}
	}
	jacocoTestReport.dependsOn test
	check.dependsOn jacocoTestReport

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	idea {
		module {
			scopes.TEST.plus += [configurations.integTestCompile]
		}
	}
}

// Apply after the groovy plugin
apply from: 'gradle/dependencies.gradle'

// Apply after nebula-project
apply from: 'gradle/publishing.gradle'
apply from: 'gradle/release.gradle'

apply from: 'gradle/sonar.gradle'

apply from: 'gradle/reporting.gradle'

task wrapper(type: Wrapper) {
	gradleVersion = '2.0'
}
