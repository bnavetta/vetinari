allprojects {
	apply plugin: 'artifactory-publish'
	apply plugin: 'com.jfrog.bintray'
	apply plugin: 'maven-publish'
	apply plugin: 'nebula-publishing'

	artifactory {
		contextUrl = 'https://oss.jfrog.org'
	}

	// Multi-project equivalent of nebula-maven-distribute
	publishing {
		repositories {
			maven {
				name 'distMaven'
				url rootProject.file('distMaven').toURI().toURL()
			}
		}
	}
	def distTask = tasks.findByName('distribute') ?: tasks.create(name: 'distribute')
	distTask.dependsOn 'publishMavenNebulaPublicationToDistMavenRepository'
	distTask.outputs.dir rootProject.file('distMaven')
	tasks.matching({ it.name == 'clean' }).all { cleanTask -> cleanTask.dependsOn('cleanDistribute')}

	bintray {
		user = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER')
		key = project.hasProperty('bintrayKey') ? project.bintrayKey : System.getenv('BINTRAY_KEY')

		publications = ['mavenNebula']
		publish = true

		pkg {
			repo = 'vetinari'
			name = 'vetinari'
			desc = 'Vetinari static site generator'
			websiteUrl = 'https://github.com/roguePanda/vetinari'
			issueTrackerUrl = 'https://github.com/roguePanda/vetinari/issues'
			vcsUrl = 'https://github.com/roguePanda/vetinari.git'
			licenses = ['Apache-2.0']
			labels = ['gradle', 'static-site']
		}
	}
}

artifactoryPublish.skip = true

// It seems that adding signing.* properties enables signing, which causes an error since the both the main jar file and
// the signature (.asc) for the jar file have null classifiers, so the maven-publish plugin can't tell which is the main artifact

artifactory {
	contextUrl = 'https://oss.jfrog.org'
	resolve {
		repository {
			repoKey = 'libs-release'
		}
	}
	publish {
		repository {
			repoKey = 'oss-snapshot-local'
			username = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER')
			password = project.hasProperty('bintrayKey') ? project.bintrayKey : System.getenv('BINTRAY_KEY')
			maven = true
		}
		defaults {
			publications 'mavenNebula'
		}
	}
}
